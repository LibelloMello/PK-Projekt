//------------------------------------------------------------------------------
// <auto-generated>
//     Denna kod har genererats av ett verktyg.
//     Körtidsversion:4.0.30319.42000
//
//     Ändringar i denna fil kan orsaka fel och kommer att förloras om
//     koden återgenereras.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="FileServiceSoap", Namespace="http://grupp11.ics.lu.se/")]
public partial class FileService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback ReadFileOperationCompleted;
    
    /// <remarks/>
    public FileService() {
        this.Url = "http://localhost:15285/FileService.asmx";
    }
    
    /// <remarks/>
    public event ReadFileCompletedEventHandler ReadFileCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://grupp11.ics.lu.se/ReadFile", RequestNamespace="http://grupp11.ics.lu.se/", ResponseNamespace="http://grupp11.ics.lu.se/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string ReadFile(string name) {
        object[] results = this.Invoke("ReadFile", new object[] {
                    name});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginReadFile(string name, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ReadFile", new object[] {
                    name}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndReadFile(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ReadFileAsync(string name) {
        this.ReadFileAsync(name, null);
    }
    
    /// <remarks/>
    public void ReadFileAsync(string name, object userState) {
        if ((this.ReadFileOperationCompleted == null)) {
            this.ReadFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadFileOperationCompleted);
        }
        this.InvokeAsync("ReadFile", new object[] {
                    name}, this.ReadFileOperationCompleted, userState);
    }
    
    private void OnReadFileOperationCompleted(object arg) {
        if ((this.ReadFileCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ReadFileCompleted(this, new ReadFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
public delegate void ReadFileCompletedEventHandler(object sender, ReadFileCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ReadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ReadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
